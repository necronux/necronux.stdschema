// ==-----------------------------------------------------------== //
// SPDX-FileCopyrightText: Â© 2025 Nayan Patil <nayantsg@proton.me>
//
// SPDX-License-Identifier: Apache-2.0
// ==-----------------------------------------------------------== //

@ModuleInfo { minPklVersion = "0.27.0" }
module ReleaseBuild

import "@internal/schemas/GitHubAction.pkl" as gha

import "@internal/gha/ActionsRegistry.pkl" as ActReg
import "@internal/gha/StepsCommon.pkl"
import "@internal/gha/UtilsCommon.pkl"

const function necronuxStdSchema() = new gha.Job {
  name = "Build necronux.stdschema"
  steps {
    StepsCommon.checkoutWithRef(0, "${{ inputs.release_tag }}")
    StepsCommon.installAction("just")
    new {
      name = "Build release package"
      run = "just make-stdschemapkg"
      shell = "bash"
    }
    new {
      name =  "Determine package dir path and archive name"
      run = """
      pkgdir="build/generated/pkl/packages"
      echo "PKGDIR=$pkgdir" >> $GITHUB_ENV
      echo "ARCHIVE=${{ inputs.release_tag }}" >> $GITHUB_ENV
      """
      shell = "bash"
    }
    new {
      name = "Create directory for archive and transfer files"
      run = """
      mkdir -p "$ARCHIVE"
      cp "$PKGDIR"/${{ inputs.release_tag }} "$ARCHIVE"/
      cp "$PKGDIR"/${{ inputs.release_tag }}.sha256 "$ARCHIVE"/
      cp "$PKGDIR"/${{ inputs.release_tag }}.zip "$ARCHIVE"/
      cp "$PKGDIR"/${{ inputs.release_tag }}.zip.sha256 "$ARCHIVE"/
      """
      shell = "bash"
    }
    new {
      name = "Build archive"
      run = """
      tar czf "$ARCHIVE.tar.gz" "$ARCHIVE"
      shasum -a 256 "$ARCHIVE.tar.gz" > "$ARCHIVE.tar.gz.sha256"
      echo "ASSET=$ARCHIVE.tar.gz" >> $GITHUB_ENV
      echo "ASSET_SUM=$ARCHIVE.tar.gz.sha256" >> $GITHUB_ENV
      """
      shell = "bash"
    }
    new {
      name = "Upload pkgs, zips and sums"
      uses = ActReg.uploadArtifact
      with {
        ["name"] = "${{ inputs.release_tag }}"
        ["overwrite"] = true
        ["compression-level"] = 9
        ["path"] = """
        ${{ env.ASSET }}
        ${{ env.ASSET_SUM }}
        """
      }
    }
  }
} |> UtilsCommon.standardJobConfig(null, null)
